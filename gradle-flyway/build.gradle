import org.apache.tools.ant.filters.ReplaceTokens

group 'com.deavalexb.helloworld'
version '0.0.1'

apply from: "$rootDir/gradle/loadBuildConfig.gradle"
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: "org.flywaydb.flyway"

sourceCompatibility = 1.8
targetCompatibility = 1.8

buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.1.RELEASE")
        classpath "gradle.plugin.com.boxfuse.client:flyway-release:4.0.3"
        classpath "org.postgresql:postgresql:9.4.1212"
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.1'
    distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
}

repositories {
    mavenCentral()
    jcenter()
}

jar {
    baseName = 'gradle-flyware'
}

dependencies {
    /*
        Spring
     */
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-jdbc'

    /*
        database
    */
    compile 'com.zaxxer:HikariCP:2.4.7'
    compile 'org.postgresql:postgresql:9.4.1212'

    /*
        Tests
     */
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'junit:junit:4.12'
}

task replaceApplicationPropsDev << {
    replaceApplicationProps(sourceSets.main.resources.srcDirs[0])
}

/*
    Replace application properties
 */
def replaceApplicationProps(destinationDir) {
    copy {
        def props = new Properties();
        FileInputStream is = new FileInputStream("$rootDir/configuration/$config.app.compilePropertyFile");
        InputStreamReader reader = new InputStreamReader(is, "UTF-8");

        props.load(reader);

        from sourceSets.main.resources.srcDirs[0]
        into "$buildDir/tmp"

        include "application.properties"
        include "log4j.properties"
        filter(ReplaceTokens, tokens: props)
    }

    copy {
        from "$buildDir/tmp"
        into destinationDir

        include "application.properties"
        include "log4j.properties"
    }
}

flyway {
    url = config.server.url
    user = config.server.user
    password = config.server.password

    sqlMigrationPrefix = 'FLY_'

    validateOnMigrate = true
    baselineOnMigrate = true
    outOfOrder = false
    baselineVersion = '0.0.1'
}

processResources.dependsOn replaceApplicationPropsDev